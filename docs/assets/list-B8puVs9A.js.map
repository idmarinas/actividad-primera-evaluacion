{"version":3,"file":"list-B8puVs9A.js","sources":["../../src/views/pieces/list.vue"],"sourcesContent":["<script setup>\nimport { usePageTitleStore } from '@/stores/page-title'\nimport { usePiecesStore } from '@/stores/pieces'\nimport { computed } from 'vue'\nimport { useModal } from '@/composables/common'\n\nimport Button from '@/components/forms/button.vue'\nimport Add from '@/components/icons/add.vue'\nimport Modal from '@/components/dialogs/modal.vue'\nimport CircleCheck from '@/components/icons/circle/check.vue'\nimport CircleX from '@/components/icons/circle/x.vue'\nimport Alert from '@/components/dialogs/alert.vue'\nimport Badge from '@/components/tags/badge.vue'\n\nimport Del from '@/components/forms/buttons/icons/del.vue'\nimport Edit from '@/components/forms/buttons/icons/edit.vue'\n\nconst titleStore = usePageTitleStore()\nconst piecesStore = usePiecesStore()\n\nconst { modal, openModal, closeModal } = useModal()\n\nconst list = computed(() => piecesStore.all())\n\nfunction deletePiece(item) {\n\tpiecesStore.remove(item)\t\n\tcloseModal()\n}\n\ntitleStore.title = 'Lista de piezas'\n</script>\n\n<template>\n\t<div class=\"flex flex-row justify-end\">\n\t\t<Button button-style=\"success\" class=\"rounded-md\"><Add width=\"32\" /> <span>Añadir pieza</span></Button>\n\t</div>\n\n\t<table>\n\t\t<thead>\n\t\t\t<tr class=\"flex flex-col md:table-row\">\n\t\t\t\t<th>Largo</th>\n\t\t\t\t<th>Ancho</th>\n\t\t\t\t<th>Grosor</th>\n\t\t\t\t<th>Color</th>\n\t\t\t\t<th>Superficie</th>\n\t\t\t\t<th>Volumen</th>\n\t\t\t\t<th>Cortada</th>\n\t\t\t\t<th></th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<TransitionGroup tag=\"tbody\" name=\"list\">\n\t\t\t<tr v-for=\"item in list\" :key=\"item\" class=\"flex flex-col md:table-row\">\n\t\t\t\t<td>{{ item.dimensions.length }} cm</td>\n\t\t\t\t<td>{{ item.dimensions.width }} cm</td>\n\t\t\t\t<td>{{ item.dimensions.thickness }} cm</td>\n\t\t\t\t<td>{{ item.color }}</td>\n\t\t\t\t<td>{{ piecesStore.area(item.dimensions, item.bothFaces).toLocaleString() }} m<sup>2</sup></td>\n\t\t\t\t<td>{{ piecesStore.volume(item.dimensions).toLocaleString() }} m<sup>3</sup></td>\n\t\t\t\t<td><Badge :style=\"item.cut ? 'success' : 'danger'\">{{ item.cut ? 'Sí' : 'No' }}</Badge></td>\n\n\t\t\t\t<td class=\"h-full flex items-center justify-center md:justify-end gap-2\">\n\t\t\t\t\t<Edit />\n\t\t\t\t\t<Del @click=\"openModal(item)\" />\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</TransitionGroup>\n\t</table>\n\n\t<Teleport to=\"body\">\n\t\t<Modal :opened=\"modal.opened\" @close=\"closeModal\">\n\t\t\t<template #title>\n\t\t\t\t¿Seguro que desea borrar la pieza {{ modal.item.id }}?\n\t\t\t</template>\n\n\t\t\t<template #default>\n\t\t\t\t<p class=\"flex gap-2\">\n\t\t\t\t\t<span :class=\"modal.order.served ? 'text-green-500' : 'text-red-500'\">\n\t\t\t\t\t\t<component :is=\"modal.order.served ? CircleCheck : CircleX \" width=\"24\" />\n\t\t\t\t\t</span>\n\t\t\t\t\tEl pedido {{ modal.order.served ? 'ya' : 'no' }} se ha entregado\n\t\t\t\t</p>\n\t\t\t\t<Alert type=\"warning\">Esto borrara la pieza del cliente \"{{ modal.order.client }}\" y en caso de que el pedido no tenga más piezas se borrará también. Está acción no se puede deshacer</Alert>\n\t\t\t</template>\n\n\t\t\t<template #actions>\n\t\t\t\t<Button button-style=\"danger\" class=\"rounded-md\" @click=\"deletePiece(modal.item)\">Borrar</Button>\n\t\t\t</template>\n\t\t</Modal>\n\t</Teleport>\n</template>\n"],"names":["titleStore","usePageTitleStore","piecesStore","usePiecesStore","modal","openModal","closeModal","useModal","list","computed","deletePiece","item"],"mappings":"+eAiBA,MAAMA,EAAaC,EAAiB,EAC9BC,EAAcC,EAAc,EAE5B,CAAE,MAAAC,EAAO,UAAAC,EAAW,WAAAC,CAAU,EAAKC,EAAQ,EAE3CC,EAAOC,EAAS,IAAMP,EAAY,IAAK,CAAA,EAE7C,SAASQ,EAAYC,EAAM,CAC1BT,EAAY,OAAOS,CAAI,EACvBL,EAAU,CACX,CAEA,OAAAN,EAAW,MAAQ"}