{"version":3,"file":"details-DtI80ZvM.js","sources":["../../src/components/icons/list.vue","../../src/views/orders/details.vue"],"sourcesContent":["<template>\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" viewBox=\"0 0 24 24\"><path fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12h.01M3 18h.01M3 6h.01M8 12h13M8 18h13M8 6h13\"/></svg>\n</template>\n","<script setup>\nimport { useOrdersStore } from '@/stores/orders'\nimport { usePageTitleStore } from '@/stores/page-title'\n\nimport Button from '@/components/forms/button.vue'\nimport Edit from '@/components/icons/edit.vue'\nimport Trash from '@/components/icons/trash.vue'\nimport CircleCheck from '@/components/icons/circle/check.vue'\nimport CircleX from '@/components/icons/circle/x.vue'\nimport Modal from '@/components/dialogs/modal.vue'\nimport Alert from '@/components/dialogs/alert.vue'\nimport Badge from '@/components/tags/badge.vue'\nimport List from '@/components/icons/list.vue'\n\nimport { useDateOptions, useModal } from '@/composables/common'\nimport { useRouter } from 'vue-router'\nimport { usePiecesStore } from '@/stores/pieces'\n\nconst { modal, openModal, closeModal } = useModal()\nconst router = useRouter()\n\nconst props = defineProps({\n\tid: String\n})\n\nif (props.id === undefined) {\n\trouter.push({ name: 'order_list' })\n}\n\nconst pageTitle = usePageTitleStore()\nconst store = useOrdersStore()\nconst piecesStore = usePiecesStore()\n\nconst order = store.find(props.id)\n\nfunction deleteOrder(item) {\n\tstore.remove(item)\n\t\n\trouter.push({ name: 'order_list' })\n}\n\npageTitle.title = order.client\n</script>\n\n<template>\n\t<h2>{{ `Pedido nº ${props.id}` }}</h2>\n\t\n\t<div class=\"flex flex-row gap-2\">\n\t\t<Button button-style=\"danger\" class=\"rounded-lg\" @click=\"openModal(order)\" :icon=\"true\"><Trash width=\"24\" /> Borrar pedido</Button>\n\n\t\t<div class=\"flex-1\"></div>\n\n\t\t<RouterLink :to=\"{ name: 'order_list' }\" class=\"not-prose\">\n\t\t\t<Button class=\"rounded-lg\" :icon=\"true\"><List width=\"24\" /> Lista de pedidos</Button>\n\t\t</RouterLink>\n\t\t<RouterLink :to=\"{ name: 'order_edit', params: { id: props.id }}\" class=\"not-prose\">\n\t\t\t<Button button-style=\"warning\" class=\"rounded-lg\" :icon=\"true\"><Edit width=\"24\" /> Editar pedido</Button>\n\t\t</RouterLink>\n\t</div>\n\t\n\t<h3>Datos</h3>\n\t<dl>\n\t\t<dt>Fecha del pedido</dt>\n\t\t<dd>{{ (new Date(order.orderDate)).toLocaleString(Intl.Locale, useDateOptions) }}</dd>\n\n\t\t<dt>Procesado</dt>\n\t\t<dd>Se han cortado un {{ store.processById(order.id).toLocaleString(Intl.Locale, {style : 'percent' }) }} de las piezas</dd>\n\n\t\t<dt>Servido</dt>\n\t\t<dd>\n\t\t\t<div class=\"inline-flex items-center gap-3\">\n\t\t\t\t<span :class=\"order.served ? 'text-green-500' : 'text-red-500'\">\n\t\t\t\t\t<component :is=\"order.served ? CircleCheck : CircleX \" width=\"24\" />\n\t\t\t\t</span>\n\t\t\t\t<span>El pedido {{ order.served ? 'ya' : 'no' }} se ha entregado</span>\n\t\t\t</div>\n\t\t</dd>\n\t</dl>\n\n\t<h3>Piezas ({{ order.pieces.length }})</h3>\n\n\t<table>\n\t\t<thead>\n\t\t\t<tr class=\"flex flex-col md:table-row\">\n\t\t\t\t<th>Largo</th>\n\t\t\t\t<th>Ancho</th>\n\t\t\t\t<th>Grosor</th>\n\t\t\t\t<th>Color</th>\n\t\t\t\t<th>Superficie</th>\n\t\t\t\t<th>Volumen</th>\n\t\t\t\t<th>Cortada</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<TransitionGroup tag=\"tbody\" name=\"list\">\n\t\t\t<tr v-for=\"item in order.pieces\" :key=\"item\" class=\"flex flex-col md:table-row\">\n\t\t\t\t<td>{{ item.dimensions.length }} cm</td>\n\t\t\t\t<td>{{ item.dimensions.width }} cm</td>\n\t\t\t\t<td>{{ item.dimensions.thickness }} cm</td>\n\t\t\t\t<td>{{ item.color }}</td>\n\t\t\t\t<td>{{ piecesStore.area(item.dimensions, item.bothFaces).toLocaleString() }} m<sup>2</sup></td>\n\t\t\t\t<td>{{ piecesStore.volume(item.dimensions).toLocaleString() }} m<sup>3</sup></td>\n\t\t\t\t<td><Badge :style=\"item.cut ? 'success' : 'danger'\">{{ item.cut ? 'Sí' : 'No' }}</Badge></td>\n\t\t\t</tr>\n\t\t</TransitionGroup>\n\t</table>\n\n\t<Teleport to=\"body\">\n\t\t<Modal :opened=\"modal.opened\" @close=\"closeModal\">\n\t\t\t<template #title>\n\t\t\t\t¿Seguro que desea borrar el pedido de {{ modal.item.client }}?\n\t\t\t</template>\n\n\t\t\t<template #default>\n\t\t\t\t<p class=\"flex gap-2\">\n\t\t\t\t\t<span :class=\"modal.item.served ? 'text-green-500' : 'text-red-500'\">\n\t\t\t\t\t\t<component :is=\"modal.item.served ? CircleCheck : CircleX \" width=\"24\" />\n\t\t\t\t\t</span>\n\t\t\t\t\tEl pedido {{ modal.item.served ? 'ya' : 'no' }} se ha entregado\n\t\t\t\t</p>\n\t\t\t\t<Alert type=\"warning\">Esto borrara el pedido así como las piezas asociadas al mismo y no es posible recuperar el pedido.</Alert>\n\t\t\t</template>\n\n\t\t\t<template #actions>\n\t\t\t\t<Button button-style=\"danger\" class=\"rounded-md\" @click=\"deleteOrder(modal.item)\">Borrar</Button>\n\t\t\t</template>\n\t\t</Modal>\n\t</Teleport>\n</template>\n"],"names":["_hoisted_1","_sfc_render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","modal","openModal","closeModal","useModal","router","useRouter","props","__props","pageTitle","usePageTitleStore","store","useOrdersStore","piecesStore","usePiecesStore","order","deleteOrder","item"],"mappings":"oUACMA,EAAkC,CAAC,MAAA,6BAAmB,cAAmB,4BAA9E,SAAAC,EAAAC,EAAAC,EAAA,QAA8OC,EAAA,EAAAC,EAAA,MAAAL,EAAAG,EAAA,CAAA,IAAAA,EAAA,CAAA,EAAA,CAAzJG,EAAW,OAAA,CAAC,KAAM,OAAgB,OAAA,eAAuB,yBAAwB,kBAAgB,QAAC,eAAqD,qPCiB7O,KAAM,CAAE,MAAAC,EAAO,UAAAC,EAAW,WAAAC,CAAU,EAAKC,EAAQ,EAC3CC,EAASC,EAAS,EAElBC,EAAQC,EAIVD,EAAM,KAAO,QAChBF,EAAO,KAAK,CAAE,KAAM,YAAc,CAAA,EAGnC,MAAMI,EAAYC,EAAiB,EAC7BC,EAAQC,EAAc,EACtBC,EAAcC,EAAc,EAE5BC,EAAQJ,EAAM,KAAKJ,EAAM,EAAE,EAEjC,SAASS,EAAYC,EAAM,CAC1BN,EAAM,OAAOM,CAAI,EAEjBZ,EAAO,KAAK,CAAE,KAAM,YAAc,CAAA,CACnC,CAEA,OAAAI,EAAU,MAAQM,EAAM"}